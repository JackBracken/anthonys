upstream unicorn_<%= stage_domain %> {
  server unix:/tmp/unicorn.<%= stage_domain %>.sock fail_timeout=0;
}

server {
  listen 80;
  server_name <%= stage_domain %>;
  root <%= current_path %>/public;

  try_files $uri/index.html $uri @unicorn_<%= stage_domain %>;
  location @unicorn_<%= stage_domain %> {
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://unicorn_<%= stage_domain %>;
    proxy_read_timeout 240s;
  }

  if (-f $document_root/system/maintenance.html) {
    return 503;
  }
  error_page 503 @maintenance;
  location @maintenance {
    rewrite ^(.*)$ /system/maintenance.html last;
    break;
  }

  location ~* \.(eot|otf|ttf|woff)$ {
    add_header Access-Control-Allow-Origin *;
  }

  error_page 500 502 503 504 /500.html;
  client_max_body_size 4G;
  keepalive_timeout 10;
}

server {
  listen 443;
  ssl on;
  server_name <%= stage_domain %>;
  root <%= current_path %>/public;

  ssl_certificate /etc/nginx/ssl/<%= stage_domain %>.crt;
  ssl_certificate_key /etc/nginx/ssl/<%= stage_domain %>.key;

  try_files $uri/index.html $uri @unicorn_<%= stage_domain %>;
  location @unicorn_<%= stage_domain %> {
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header Host $http_host;
    proxy_redirect off;
    proxy_pass http://unicorn_<%= stage_domain %>;
    proxy_read_timeout 240s;
  }

  location ~* \.(eot|otf|ttf|woff)$ {
    add_header Access-Control-Allow-Origin *;
  }

  if (-f $document_root/system/maintenance.html) {
    return 503;
  }
  error_page 503 @maintenance;
  location @maintenance {
    rewrite ^(.*)$ /system/maintenance.html last;
    break;
  }

  error_page 500 502 503 504 /500.html;
  client_max_body_size 4G;
  keepalive_timeout 10;

}

server {
  listen 80;
  server_name assets.<%= stage_domain %>;
  root <%= current_path %>/public;
  location / {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }

  location ~* \.(eot|otf|ttf|woff)$ {
    add_header Access-Control-Allow-Origin *;
  }
}

server {
  listen 443;
  ssl on;
  server_name assets.<%= stage_domain %>;
  root <%= current_path %>/public;

  location / {
    gzip_static on;
    expires max;
    add_header Cache-Control public;
  }
  location ~* \.(eot|otf|ttf|woff)$ {
    add_header Access-Control-Allow-Origin *;
  }

  ssl_certificate /etc/nginx/ssl/<%= stage_domain %>.crt;
  ssl_certificate_key /etc/nginx/ssl/<%= stage_domain %>.key;
}